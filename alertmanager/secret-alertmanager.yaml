apiVersion: v1
data:
  alertmanager-tmpl.yaml: 
  alertmanager.yaml: Z2xvYmFsOgogICMgUmVzb2x2ZVRpbWVvdXQgaXMgdGhlIHRpbWUgYWZ0ZXIgd2hpY2ggYW4gYWxlcnQgaXMgZGVjbGFyZWQgcmVzb2x2ZWQKICAjIGlmIGl0IGhhcyBub3QgYmVlbiB1cGRhdGVkLgogIHJlc29sdmVfdGltZW91dDogNW0KCiAgIyBUaGUgc21hcnRob3N0IGFuZCBTTVRQIHNlbmRlciB1c2VkIGZvciBtYWlsIG5vdGlmaWNhdGlvbnMuCiAgc210cF9zbWFydGhvc3Q6ICdzbXRwLnNlbmRncmlkLm5ldDo1ODcnCiAgc210cF9mcm9tOiAnYWxlcnRtYW5hZ2VyQHpjcC5jb20nCiAgc210cF9hdXRoX3VzZXJuYW1lOiAnZm9vQGJhci5jb20nCiAgc210cF9hdXRoX3Bhc3N3b3JkOiAnYmFyZm9vJwogIHNtdHBfYXV0aF9zZWNyZXQ6ICdmb29iYXInCiAgc210cF9yZXF1aXJlX3RsczogdHJ1ZQoKICBzbGFja19hcGlfdXJsOiAnaHR0cHM6Ly9nbG9iYWwuc2xhY2tfYXBpX3VybCcKICBoaXBjaGF0X2F1dGhfdG9rZW46ICcxMjM0NTU2Nzg5JwogIGhpcGNoYXRfYXBpX3VybDogJ2h0dHBzOi8vaGlwY2hhdC5mb29iYXIub3JnLycKCiMgIyBUaGUgZGlyZWN0b3J5IGZyb20gd2hpY2ggbm90aWZpY2F0aW9uIHRlbXBsYXRlcyBhcmUgcmVhZC4KdGVtcGxhdGVzOgotICcqLnRtcGwnCgojIFRoZSByb290IHJvdXRlIG9uIHdoaWNoIGVhY2ggaW5jb21pbmcgYWxlcnQgZW50ZXJzLgpyb3V0ZToKCiAgIyBUaGUgbGFiZWxzIGJ5IHdoaWNoIGluY29taW5nIGFsZXJ0cyBhcmUgZ3JvdXBlZCB0b2dldGhlci4gRm9yIGV4YW1wbGUsCiAgIyBtdWx0aXBsZSBhbGVydHMgY29taW5nIGluIGZvciBjbHVzdGVyPUEgYW5kIGFsZXJ0bmFtZT1MYXRlbmN5SGlnaCB3b3VsZAogICMgYmUgYmF0Y2hlZCBpbnRvIGEgc2luZ2xlIGdyb3VwLgoKICBncm91cF9ieTogWydhbGVydG5hbWUnLCAnc2V2ZXJpdHknLCAncmVjZWl2ZXInXQoKICAjIFdoZW4gYSBuZXcgZ3JvdXAgb2YgYWxlcnRzIGlzIGNyZWF0ZWQgYnkgYW4gaW5jb21pbmcgYWxlcnQsIHdhaXQgYXQKICAjIGxlYXN0ICdncm91cF93YWl0JyB0byBzZW5kIHRoZSBpbml0aWFsIG5vdGlmaWNhdGlvbi4KICAjIFRoaXMgd2F5IGVuc3VyZXMgdGhhdCB5b3UgZ2V0IG11bHRpcGxlIGFsZXJ0cyBmb3IgdGhlIHNhbWUgZ3JvdXAgdGhhdCBzdGFydAogICMgZmlyaW5nIHNob3J0bHkgYWZ0ZXIgYW5vdGhlciBhcmUgYmF0Y2hlZCB0b2dldGhlciBvbiB0aGUgZmlyc3QKICAjIG5vdGlmaWNhdGlvbi4KCiAgZ3JvdXBfd2FpdDogMzBzCgogICMgV2hlbiB0aGUgZmlyc3Qgbm90aWZpY2F0aW9uIHdhcyBzZW50LCB3YWl0ICdncm91cF9pbnRlcnZhbCcgdG8gc2VuZCBhIGJhdGNoCiAgIyBvZiBuZXcgYWxlcnRzIHRoYXQgc3RhcnRlZCBmaXJpbmcgZm9yIHRoYXQgZ3JvdXAuCgogIGdyb3VwX2ludGVydmFsOiA1bQoKICAjIElmIGFuIGFsZXJ0IGhhcyBzdWNjZXNzZnVsbHkgYmVlbiBzZW50LCB3YWl0ICdyZXBlYXRfaW50ZXJ2YWwnIHRvCiAgIyByZXNlbmQgdGhlbS4KCiAgcmVwZWF0X2ludGVydmFsOiAxaAoKICAjIEEgZGVmYXVsdCByZWNlaXZlcgoKICAjIElmIGFuIGFsZXJ0IGlzbid0IGNhdWdodCBieSBhIHJvdXRlLCBzZW5kIGl0IHRvIGRlZmF1bHQuCiAgcmVjZWl2ZXI6IGRlZmF1bHQKCiAgIyBBbGwgdGhlIGFib3ZlIGF0dHJpYnV0ZXMgYXJlIGluaGVyaXRlZCBieSBhbGwgY2hpbGQgcm91dGVzIGFuZCBjYW4KICAjIG92ZXJ3cml0dGVuIG9uIGVhY2guCgogICMgVGhlIGNoaWxkIHJvdXRlIHRyZWVzLgogIHJvdXRlczoKICAtIHJlY2VpdmVyOiBzay1jcHMtb3BzCiAgICBtYXRjaF9yZToKICAgICAgY2hhbm5lbDogc2stY3BzLW9wcwogICAgcm91dGVzOgogICAgLSByZWNlaXZlcjogZGVmYXVsdAogICAgICBtYXRjaDoKICAgICAgICBzZXZlcml0eTogd2FybmluZwogICAgLSByZWNlaXZlcjogc2stY3BzLW9wcwogICAgICBtYXRjaDoKICAgICAgICBzZXZlcml0eTogY3JpdGljYWwKCnJlY2VpdmVyczoKLSBuYW1lOiAnZGVmYXVsdCcKCi0gbmFtZTogJ3NrLWNwcy1vcHMnCiAgc2xhY2tfY29uZmlnczoKICAtIGFwaV91cmw6ICdodHRwczovL2hvb2tzLnNsYWNrLmNvbS9zZXJ2aWNlcy9UQUZNTUdOTlIvQkIxTFBEREI1L1J3RmVkUWFjdDdINEg3ZmRESml6S09zdCcKICAgIHNlbmRfcmVzb2x2ZWQ6IHRydWUK
kind: Secret
metadata:
  creationTimestamp: null
  name: alertmanager-alertmanager
